{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"size\", \"color\", \"style\", \"animating\", \"hidesWhenStopped\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { defaultProps } from \"./SpinnerProps\";\nimport AnimationContainer from \"./AnimationContainer\";\nimport { stagger } from \"./utils\";\nvar values = [2, 3, 4, 1, 2, 3, 0, 1, 2];\n\nvar Grid = function (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  var _super = _createSuper(Grid);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          style = _this$props.style,\n          animating = _this$props.animating,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(AnimationContainer, {\n        initAnimation: function initAnimation() {\n          return {\n            grid: function grid(value) {\n              return stagger(100, 5, {\n                duration: 1300,\n                value: value,\n                keyframes: [0, 35, 70, 100]\n              });\n            }\n          };\n        },\n        animating: animating\n      }, function (interpolations) {\n        return React.createElement(View, _extends({\n          style: [{\n            width: size,\n            height: size,\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            opacity: !animating && hidesWhenStopped ? 0 : 1\n          }, style]\n        }, rest), values.map(function (value) {\n          return interpolations.grid[value];\n        }).map(function (value, index) {\n          return React.createElement(Animated.View, {\n            key: index,\n            style: {\n              width: size / 3,\n              height: size / 3,\n              backgroundColor: color,\n              transform: [{\n                scale: value.interpolate({\n                  inputRange: [0, 35, 70, 100],\n                  outputRange: [1, 0.01, 1, 1]\n                })\n              }]\n            }\n          });\n        }));\n      });\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nexport { Grid as default };\n\n_defineProperty(Grid, \"defaultProps\", defaultProps);","map":{"version":3,"sources":["Grid.tsx"],"names":["values","Grid","React","defaultProps","render","rest","grid","value","stagger","duration","keyframes","animating","interpolations","width","height","flexWrap","flexDirection","opacity","size","backgroundColor","transform","scale","inputRange","outputRange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,YAAA;AACA,OAAA,kBAAA;AACA,SAAA,OAAA;AAEA,IAAMA,MAAM,GAAG,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAf,CAAe,CAAf;;IACe,I;;;;;;;;;;;;;WAGbI,kBAAS;MACP,kBAOI,KAPJ,KAAA;MAAA,IAAM,IAAN,eAAM,IAAN;MAAA,IAAM,KAAN,eAAM,KAAN;MAAA,IAAM,KAAN,eAAM,KAAN;MAAA,IAAM,SAAN,eAAM,SAAN;MAAA,IAAM,gBAAN,eAAM,gBAAN;MAAA,IAMKC,IANL;;MASA,OACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA;QACE,aAAa,EAAE;UAAA,OAAO;YACpBC,IAAI,EAAGC,cAAAA,KAAD;cAAA,OACJC,OAAO,CAAA,GAAA,EAAA,CAAA,EAAS;gBACdC,QAAQ,EADM,IAAA;gBAEdF,KAAK,EAFS,KAAA;gBAGdG,SAAS,EAAE,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA;cAHG,CAAT,CADH;YAAA;UADc,CAAP;QAAA,CADjB;QASE,SAAS,EAAEC;MATb,CAAA,EAWIC,UAAAA,cAAD;QAAA,OACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;UACE,KAAK,EAAE,CACL;YACEC,KAAK,EADP,IAAA;YAEEC,MAAM,EAFR,IAAA;YAGEC,QAAQ,EAHV,MAAA;YAIEC,aAAa,EAJf,KAAA;YAKEC,OAAO,EAAE,CAAA,SAAA,IAAA,gBAAA,GAAA,CAAA,GAAqC;UALhD,CADK,EAAA,KAAA;QADT,CAAA,EAAA,IAAA,CAAA,EAaG,MAAM,CAAN,GAAA,CACOV,UAAAA,KAAD;UAAA,OAAWK,cAAc,CAAdA,IAAAA,CADjB,KACiBA,CAAX;QAAA,CADN,EAAA,GAAA,CAEM,UAAA,KAAA,EAAA,KAAA;UAAA,OACH,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;YACE,GAAG,EADL,KAAA;YAEE,KAAK,EAAE;cACLC,KAAK,EAAEK,IAAI,GADN,CAAA;cAELJ,MAAM,EAAEI,IAAI,GAFP,CAAA;cAGLC,eAAe,EAHV,KAAA;cAILC,SAAS,EAAE,CACT;gBACEC,KAAK,EAAE,KAAK,CAAL,WAAA,CAAkB;kBACvBC,UAAU,EAAE,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EADW,GACX,CADW;kBAEvBC,WAAW,EAAE,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA;gBAFU,CAAlB;cADT,CADS;YAJN;UAFT,CAAA,CADG;QAAA,CAFN,CAbH,CADD;MAAA,CAXH,CADF;IAkDD;;;;EA/D+BrB,KAAK,CAAxB,S;;SAAA,I;;gBAAMD,I,kBACGE,Y","sourcesContent":["import * as React from 'react'\nimport { Animated, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nconst values = [2, 3, 4, 1, 2, 3, 0, 1, 2]\nexport default class Grid extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer\n        initAnimation={() => ({\n          grid: (value) =>\n            stagger(100, 5, {\n              duration: 1300,\n              value: value,\n              keyframes: [0, 35, 70, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(interpolations) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size,\n                flexWrap: 'wrap',\n                flexDirection: 'row',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values\n              .map((value) => interpolations.grid[value])\n              .map((value, index) => (\n                <Animated.View\n                  key={index}\n                  style={{\n                    width: size / 3,\n                    height: size / 3,\n                    backgroundColor: color,\n                    transform: [\n                      {\n                        scale: value.interpolate({\n                          inputRange: [0, 35, 70, 100],\n                          outputRange: [1, 0.01, 1, 1],\n                        }),\n                      },\n                    ],\n                  }}\n                />\n              ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}