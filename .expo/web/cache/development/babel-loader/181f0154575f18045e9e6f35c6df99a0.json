{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Circle } from \"react-native-animated-spinkit\";\nimport RNBounceable from \"@freakycoder/react-native-bounceable\";\nimport styles, { _container, _textInputStyle } from \"./SearchBar.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar defaultSearchIcon = require(\"./local-assets/search-icon.png\");\n\nvar whiteSearchIcon = require(\"./local-assets/search-icon-white.png\");\n\nvar defaultClearIcon = require(\"./local-assets/clear-icon.png\");\n\nvar whiteClearIcon = require(\"./local-assets/clear-icon-white.png\");\n\nvar SearchBar = function (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  var _super = _createSuper(SearchBar);\n\n  function SearchBar() {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.inputRef = null;\n\n    _this.handleSearchBarPress = function () {\n      var _this$inputRef;\n\n      (_this$inputRef = _this.inputRef) == null ? void 0 : _this$inputRef.focus();\n      _this.props.onPress && _this.props.onPress();\n    };\n\n    _this.handleOnClearPress = function () {\n      var _this$inputRef2;\n\n      (_this$inputRef2 = _this.inputRef) == null ? void 0 : _this$inputRef2.clear();\n      _this.props.onClearPress && _this.props.onClearPress();\n    };\n\n    _this.renderSpinner = function () {\n      var _this$props = _this.props,\n          _this$props$darkMode = _this$props.darkMode,\n          darkMode = _this$props$darkMode === void 0 ? false : _this$props$darkMode,\n          _this$props$spinnerSi = _this$props.spinnerSize,\n          spinnerSize = _this$props$spinnerSi === void 0 ? 15 : _this$props$spinnerSi,\n          _this$props$SpinnerTy = _this$props.SpinnerType,\n          SpinnerType = _this$props$SpinnerTy === void 0 ? Circle : _this$props$SpinnerTy,\n          _this$props$spinnerCo = _this$props.spinnerColor,\n          spinnerColor = _this$props$spinnerCo === void 0 ? darkMode ? \"#fdfdfd\" : \"#19191a\" : _this$props$spinnerCo,\n          _this$props$spinnerVi = _this$props.spinnerVisibility,\n          spinnerVisibility = _this$props$spinnerVi === void 0 ? false : _this$props$spinnerVi;\n      return spinnerVisibility && _jsx(View, {\n        style: styles.spinnerContainer,\n        children: _jsx(SpinnerType, {\n          size: spinnerSize,\n          color: spinnerColor\n        })\n      });\n    };\n\n    _this.renderSearchIcon = function () {\n      var _this$props2 = _this.props,\n          onSearchPress = _this$props2.onSearchPress,\n          _this$props2$darkMode = _this$props2.darkMode,\n          darkMode = _this$props2$darkMode === void 0 ? false : _this$props2$darkMode,\n          searchIconComponent = _this$props2.searchIconComponent,\n          searchIconImageStyle = _this$props2.searchIconImageStyle,\n          _this$props2$ImageCom = _this$props2.ImageComponent,\n          ImageComponent = _this$props2$ImageCom === void 0 ? Image : _this$props2$ImageCom,\n          _this$props2$searchIc = _this$props2.searchIconImageSource,\n          searchIconImageSource = _this$props2$searchIc === void 0 ? darkMode ? whiteSearchIcon : defaultSearchIcon : _this$props2$searchIc;\n      return _jsx(RNBounceable, {\n        style: styles.searchContainer,\n        onPress: onSearchPress,\n        children: searchIconComponent || _jsx(ImageComponent, {\n          resizeMode: \"contain\",\n          source: searchIconImageSource,\n          style: [styles.searchIconImageStyle, searchIconImageStyle]\n        })\n      });\n    };\n\n    _this.renderTextInput = function () {\n      var _this$props3 = _this.props,\n          onBlur = _this$props3.onBlur,\n          onFocus = _this$props3.onFocus,\n          textInputStyle = _this$props3.textInputStyle,\n          _this$props3$darkMode = _this$props3.darkMode,\n          darkMode = _this$props3$darkMode === void 0 ? false : _this$props3$darkMode,\n          _this$props3$placehol = _this$props3.placeholder,\n          placeholder = _this$props3$placehol === void 0 ? \"Search here...\" : _this$props3$placehol,\n          placeholderTextColor = _this$props3.placeholderTextColor;\n      var _placeholderTextColor = placeholderTextColor;\n\n      if (!placeholderTextColor) {\n        _placeholderTextColor = darkMode ? \"#fdfdfd\" : \"#19191a\";\n      }\n\n      return _jsx(TextInput, _objectSpread(_objectSpread({\n        placeholderTextColor: _placeholderTextColor\n      }, _this.props), {}, {\n        onBlur: onBlur,\n        onFocus: onFocus,\n        ref: function ref(_ref) {\n          return _this.inputRef = _ref;\n        },\n        style: [_textInputStyle(darkMode), textInputStyle],\n        placeholder: placeholder\n      }));\n    };\n\n    _this.renderClearIcon = function () {\n      var _this$props4 = _this.props,\n          _this$props4$darkMode = _this$props4.darkMode,\n          darkMode = _this$props4$darkMode === void 0 ? false : _this$props4$darkMode,\n          clearIconComponent = _this$props4.clearIconComponent,\n          clearIconImageStyle = _this$props4.clearIconImageStyle,\n          _this$props4$ImageCom = _this$props4.ImageComponent,\n          ImageComponent = _this$props4$ImageCom === void 0 ? Image : _this$props4$ImageCom,\n          _this$props4$clearIco = _this$props4.clearIconImageSource,\n          clearIconImageSource = _this$props4$clearIco === void 0 ? darkMode ? whiteClearIcon : defaultClearIcon : _this$props4$clearIco;\n      return _jsx(RNBounceable, {\n        bounceEffect: 0.8,\n        style: styles.clearIconContainer,\n        onPress: _this.handleOnClearPress,\n        children: clearIconComponent || _jsx(ImageComponent, {\n          resizeMode: \"contain\",\n          source: clearIconImageSource,\n          style: [styles.clearIconImageStyle, clearIconImageStyle]\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          _this$props5$darkMode = _this$props5.darkMode,\n          darkMode = _this$props5$darkMode === void 0 ? false : _this$props5$darkMode,\n          spinnerVisibility = _this$props5.spinnerVisibility;\n      return _jsxs(RNBounceable, _objectSpread(_objectSpread({}, this.props), {}, {\n        bounceEffect: 0.97,\n        style: [_container(darkMode), style],\n        onPress: this.handleSearchBarPress,\n        children: [spinnerVisibility ? this.renderSpinner() : this.renderSearchIcon(), this.renderTextInput(), this.renderClearIcon()]\n      }));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport { SearchBar as default };","map":{"version":3,"sources":["../../lib/SearchBar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nimport { View, Image, TextInput, } from \"react-native\";\nimport { Circle } from \"react-native-animated-spinkit\";\nimport RNBounceable from \"@freakycoder/react-native-bounceable\";\n/**\n * ? Local Imports\n */\nimport styles, { _container, _textInputStyle } from \"./SearchBar.style\";\nconst defaultSearchIcon = require(\"./local-assets/search-icon.png\");\nconst whiteSearchIcon = require(\"./local-assets/search-icon-white.png\");\nconst defaultClearIcon = require(\"./local-assets/clear-icon.png\");\nconst whiteClearIcon = require(\"./local-assets/clear-icon-white.png\");\nexport default class SearchBar extends React.Component {\n    inputRef = null;\n    handleSearchBarPress = () => {\n        this.inputRef?.focus();\n        this.props.onPress && this.props.onPress();\n    };\n    handleOnClearPress = () => {\n        this.inputRef?.clear();\n        this.props.onClearPress && this.props.onClearPress();\n    };\n    /* -------------------------------------------------------------------------- */\n    /*                               Render Methods                               */\n    /* -------------------------------------------------------------------------- */\n    renderSpinner = () => {\n        const { darkMode = false, spinnerSize = 15, SpinnerType = Circle, spinnerColor = darkMode ? \"#fdfdfd\" : \"#19191a\", spinnerVisibility = false, } = this.props;\n        return (spinnerVisibility && (<View style={styles.spinnerContainer}>\n          <SpinnerType size={spinnerSize} color={spinnerColor}/>\n        </View>));\n    };\n    renderSearchIcon = () => {\n        const { onSearchPress, darkMode = false, searchIconComponent, searchIconImageStyle, ImageComponent = Image, searchIconImageSource = darkMode ? whiteSearchIcon : defaultSearchIcon, } = this.props;\n        return (<RNBounceable style={styles.searchContainer} onPress={onSearchPress}>\n        {searchIconComponent || (<ImageComponent resizeMode=\"contain\" source={searchIconImageSource} style={[styles.searchIconImageStyle, searchIconImageStyle]}/>)}\n      </RNBounceable>);\n    };\n    renderTextInput = () => {\n        const { onBlur, onFocus, textInputStyle, darkMode = false, placeholder = \"Search here...\", placeholderTextColor, } = this.props;\n        let _placeholderTextColor = placeholderTextColor;\n        if (!placeholderTextColor) {\n            _placeholderTextColor = darkMode ? \"#fdfdfd\" : \"#19191a\";\n        }\n        return (<TextInput placeholderTextColor={_placeholderTextColor} {...this.props} onBlur={onBlur} onFocus={onFocus} ref={(ref) => (this.inputRef = ref)} style={[_textInputStyle(darkMode), textInputStyle]} placeholder={placeholder}/>);\n    };\n    renderClearIcon = () => {\n        const { darkMode = false, clearIconComponent, clearIconImageStyle, ImageComponent = Image, clearIconImageSource = darkMode ? whiteClearIcon : defaultClearIcon, } = this.props;\n        return (<RNBounceable bounceEffect={0.8} style={styles.clearIconContainer} onPress={this.handleOnClearPress}>\n        {clearIconComponent || (<ImageComponent resizeMode=\"contain\" source={clearIconImageSource} style={[styles.clearIconImageStyle, clearIconImageStyle]}/>)}\n      </RNBounceable>);\n    };\n    render() {\n        const { style, darkMode = false, spinnerVisibility } = this.props;\n        return (<RNBounceable {...this.props} bounceEffect={0.97} style={[_container(darkMode), style]} onPress={this.handleSearchBarPress}>\n        {spinnerVisibility ? this.renderSpinner() : this.renderSearchIcon()}\n        {this.renderTextInput()}\n        {this.renderClearIcon()}\n      </RNBounceable>);\n    }\n}\n//# sourceMappingURL=SearchBar.js.map"]},"metadata":{},"sourceType":"module"}