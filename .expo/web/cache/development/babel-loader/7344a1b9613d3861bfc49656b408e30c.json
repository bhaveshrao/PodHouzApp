{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"size\", \"color\", \"style\", \"animating\", \"hidesWhenStopped\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { defaultProps } from \"./SpinnerProps\";\nimport AnimationContainer from \"./AnimationContainer\";\nimport { loop } from \"./utils\";\n\nvar Plane = function (_React$Component) {\n  _inherits(Plane, _React$Component);\n\n  var _super = _createSuper(Plane);\n\n  function Plane() {\n    _classCallCheck(this, Plane);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Plane, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          style = _this$props.style,\n          animating = _this$props.animating,\n          hidesWhenStopped = _this$props.hidesWhenStopped,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(AnimationContainer, {\n        initAnimation: function initAnimation() {\n          return {\n            plane: function plane(value) {\n              return {\n                values: [value],\n                animation: loop({\n                  duration: 1200,\n                  value: value,\n                  keyframes: [0, 50, 100]\n                })\n              };\n            }\n          };\n        },\n        animating: animating\n      }, function (values) {\n        return React.createElement(Animated.View, _extends({\n          style: [{\n            width: size,\n            height: size,\n            backgroundColor: color,\n            opacity: !animating && hidesWhenStopped ? 0 : 1,\n            transform: [{\n              perspective: size * 3\n            }, {\n              rotateX: values.plane[0].interpolate({\n                inputRange: [0, 50, 100],\n                outputRange: ['0.1deg', '-179.9deg', '-179.9deg']\n              })\n            }, {\n              rotateY: values.plane[0].interpolate({\n                inputRange: [0, 50, 100],\n                outputRange: ['0.1deg', '0.1deg', '-179.9deg']\n              })\n            }]\n          }, style]\n        }, rest));\n      });\n    }\n  }]);\n\n  return Plane;\n}(React.Component);\n\nexport { Plane as default };\n\n_defineProperty(Plane, \"defaultProps\", defaultProps);","map":{"version":3,"sources":["Plane.tsx"],"names":["Plane","React","defaultProps","render","rest","plane","value","values","animation","loop","duration","keyframes","animating","width","height","backgroundColor","opacity","transform","perspective","size","rotateX","inputRange","outputRange","rotateY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,SAAA,YAAA;AACA,OAAA,kBAAA;AACA,SAAA,IAAA;;IAEe,K;;;;;;;;;;;;;WAGbG,kBAAS;MACP,kBAOI,KAPJ,KAAA;MAAA,IAAM,IAAN,eAAM,IAAN;MAAA,IAAM,KAAN,eAAM,KAAN;MAAA,IAAM,KAAN,eAAM,KAAN;MAAA,IAAM,SAAN,eAAM,SAAN;MAAA,IAAM,gBAAN,eAAM,gBAAN;MAAA,IAMKC,IANL;;MASA,OACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA;QACE,aAAa,EAAE;UAAA,OAAO;YACpBC,KAAK,EAAGC,eAAAA,KAAD;cAAA,OAAY;gBACjBC,MAAM,EAAE,CADS,KACT,CADS;gBAEjBC,SAAS,EAAEC,IAAI,CAAC;kBACdC,QAAQ,EADM,IAAA;kBAEdJ,KAAK,EAFS,KAAA;kBAGdK,SAAS,EAAE,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA;gBAHG,CAAD;cAFE,CAAZ;YAAA;UADa,CAAP;QAAA,CADjB;QAWE,SAAS,EAAEC;MAXb,CAAA,EAaIL,UAAAA,MAAD;QAAA,OACC,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;UACE,KAAK,EAAE,CACL;YACEM,KAAK,EADP,IAAA;YAEEC,MAAM,EAFR,IAAA;YAGEC,eAAe,EAHjB,KAAA;YAIEC,OAAO,EAAE,CAAA,SAAA,IAAA,gBAAA,GAAA,CAAA,GAJX,CAAA;YAKEC,SAAS,EAAE,CACT;cACEC,WAAW,EAAEC,IAAI,GAAG;YADtB,CADS,EAIT;cACEC,OAAO,EAAE,MAAM,CAAN,KAAA,CAAA,CAAA,EAAA,WAAA,CAA4B;gBACnCC,UAAU,EAAE,CAAA,CAAA,EAAA,EAAA,EADuB,GACvB,CADuB;gBAEnCC,WAAW,EAAE,CAAA,QAAA,EAAA,WAAA,EAAA,WAAA;cAFsB,CAA5B;YADX,CAJS,EAUT;cACEC,OAAO,EAAE,MAAM,CAAN,KAAA,CAAA,CAAA,EAAA,WAAA,CAA4B;gBACnCF,UAAU,EAAE,CAAA,CAAA,EAAA,EAAA,EADuB,GACvB,CADuB;gBAEnCC,WAAW,EAAE,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA;cAFsB,CAA5B;YADX,CAVS;UALb,CADK,EAAA,KAAA;QADT,CAAA,EAfN,IAeM,CAAA,CADD;MAAA,CAbH,CADF;IA+CD;;;;EA5DgCrB,KAAK,CAAzB,S;;SAAA,K;;gBAAMD,K,kBACGE,Y","sourcesContent":["import * as React from 'react'\nimport { Animated } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { loop } from './utils'\n\nexport default class Plane extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer\n        initAnimation={() => ({\n          plane: (value) => ({\n            values: [value],\n            animation: loop({\n              duration: 1200,\n              value: value,\n              keyframes: [0, 50, 100],\n            }),\n          }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <Animated.View\n            style={[\n              {\n                width: size,\n                height: size,\n                backgroundColor: color,\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n                transform: [\n                  {\n                    perspective: size * 3,\n                  },\n                  {\n                    rotateX: values.plane[0].interpolate({\n                      inputRange: [0, 50, 100],\n                      outputRange: ['0.1deg', '-179.9deg', '-179.9deg'],\n                    }),\n                  },\n                  {\n                    rotateY: values.plane[0].interpolate({\n                      inputRange: [0, 50, 100],\n                      outputRange: ['0.1deg', '0.1deg', '-179.9deg'],\n                    }),\n                  },\n                ],\n              },\n              style,\n            ]}\n            {...rest}\n          />\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}