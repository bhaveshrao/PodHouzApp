{"ast":null,"code":"import Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nfunction createKeyframeEasingFunction(keyframes, easing) {\n  return function (t) {\n    for (var keyframeIndex = 1; keyframeIndex < keyframes.length; keyframeIndex++) {\n      if (t < keyframes[keyframeIndex] / 100) {\n        var prev = keyframes[keyframeIndex - 1] / 100;\n        var current = (keyframes[keyframeIndex] - keyframes[keyframeIndex - 1]) / 100;\n        return prev + easing((t - prev) / current) * current;\n      }\n    }\n\n    return t;\n  };\n}\n\nfunction loop(_ref) {\n  var duration = _ref.duration,\n      value = _ref.value,\n      _ref$keyframes = _ref.keyframes,\n      keyframes = _ref$keyframes === void 0 ? [0, 100] : _ref$keyframes,\n      _ref$easing = _ref.easing,\n      easing = _ref$easing === void 0 ? Easing.bezier(0.42, 0.0, 0.58, 1.0) : _ref$easing,\n      _ref$toValue = _ref.toValue,\n      toValue = _ref$toValue === void 0 ? 100 : _ref$toValue;\n  var timing = Animated.timing(value, {\n    duration: duration,\n    easing: createKeyframeEasingFunction(keyframes, easing),\n    toValue: toValue,\n    useNativeDriver: Platform.OS !== 'web'\n  });\n  return Animated.loop(timing);\n}\n\nfunction stagger(time, amount, animationConfig) {\n  var duration = animationConfig.duration,\n      value = animationConfig.value,\n      _animationConfig$keyf = animationConfig.keyframes,\n      keyframes = _animationConfig$keyf === void 0 ? [0, 100] : _animationConfig$keyf,\n      _animationConfig$easi = animationConfig.easing,\n      easing = _animationConfig$easi === void 0 ? Easing.bezier(0.42, 0.0, 0.58, 1.0) : _animationConfig$easi,\n      _animationConfig$toVa = animationConfig.toValue,\n      toValue = _animationConfig$toVa === void 0 ? 100 : _animationConfig$toVa;\n  var easingFunction = createKeyframeEasingFunction(keyframes, easing);\n\n  if (Platform.OS === 'web') {\n    var _values = new Array(amount).fill(null).map(function (_) {\n      return new Animated.Value(0);\n    });\n\n    var animations = _values.map(function (value) {\n      return loop({\n        value: value,\n        duration: duration,\n        easing: easing,\n        toValue: toValue,\n        keyframes: keyframes\n      });\n    });\n\n    var _animation = Animated.stagger(time, animations);\n\n    return {\n      animation: _animation,\n      values: _values\n    };\n  }\n\n  var timing = Animated.timing(value, {\n    duration: duration,\n    easing: easingFunction,\n    toValue: toValue,\n    useNativeDriver: true\n  });\n  var animation = Animated.loop(timing);\n  var frameDuration = 1000.0 / 60.0;\n  var inputRange = [];\n  var numFrames = Math.round(animationConfig.duration / frameDuration);\n\n  for (var frame = 0; frame < numFrames; frame++) {\n    inputRange.push(easingFunction(frame / numFrames) * 100);\n  }\n\n  var values = [];\n\n  for (var index = amount - 1; index >= 0; index--) {\n    var delayedFrames = Math.round(index * time / animationConfig.duration * numFrames);\n    var outputRange = inputRange.slice(delayedFrames).concat(inputRange.slice(0, delayedFrames));\n\n    var _value = index === 0 ? animationConfig.value : animationConfig.value.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange\n    });\n\n    values.push(_value);\n  }\n\n  return {\n    animation: animation,\n    values: values\n  };\n}\n\nexport { loop, stagger };","map":{"version":3,"sources":["utils.ts"],"names":["t","keyframeIndex","keyframes","prev","current","easing","Easing","toValue","timing","duration","createKeyframeEasingFunction","useNativeDriver","Platform","Animated","easingFunction","values","_","animations","value","loop","animation","frameDuration","inputRange","numFrames","Math","animationConfig","frame","index","amount","delayedFrames","outputRange"],"mappings":"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","sourcesContent":["import { EasingFunction, Easing, Animated, Platform } from 'react-native'\n\nfunction createKeyframeEasingFunction(\n  keyframes: number[],\n  easing: EasingFunction\n) {\n  return (t: number) => {\n    for (\n      let keyframeIndex = 1;\n      keyframeIndex < keyframes.length;\n      keyframeIndex++\n    ) {\n      if (t < keyframes[keyframeIndex] / 100) {\n        const prev = keyframes[keyframeIndex - 1] / 100\n        const current =\n          (keyframes[keyframeIndex] - keyframes[keyframeIndex - 1]) / 100\n\n        return prev + easing((t - prev) / current) * current\n      }\n    }\n    return t\n  }\n}\n\ninterface AnimationConfig {\n  duration: number\n  value: Animated.Value\n  keyframes?: number[]\n  toValue?: number\n  easing?: EasingFunction\n}\n\nfunction loop({\n  duration,\n  value,\n  keyframes = [0, 100],\n  easing = Easing.bezier(0.42, 0.0, 0.58, 1.0),\n  toValue = 100,\n}: AnimationConfig) {\n  const timing = Animated.timing(value, {\n    duration: duration,\n    easing: createKeyframeEasingFunction(keyframes, easing),\n    toValue: toValue,\n    useNativeDriver: Platform.OS !== 'web',\n  })\n\n  return Animated.loop(timing)\n}\n\nfunction stagger(\n  time: number,\n  amount: number,\n  animationConfig: AnimationConfig\n) {\n  const {\n    duration,\n    value,\n    keyframes = [0, 100],\n    easing = Easing.bezier(0.42, 0.0, 0.58, 1.0),\n    toValue = 100,\n  } = animationConfig\n  const easingFunction = createKeyframeEasingFunction(keyframes, easing)\n\n  if (Platform.OS === 'web') {\n    const values = new Array(amount)\n      .fill(null)\n      .map((_) => new Animated.Value(0))\n\n    const animations = values.map((value) =>\n      loop({\n        value,\n        duration,\n        easing,\n        toValue,\n        keyframes,\n      })\n    )\n\n    const animation = Animated.stagger(time, animations)\n\n    return { animation, values }\n  }\n\n  const timing = Animated.timing(value, {\n    duration: duration,\n    easing: easingFunction,\n    toValue: toValue,\n    useNativeDriver: true,\n  })\n\n  const animation = Animated.loop(timing)\n\n  // React Native only does 60fps\n  // https://github.com/facebook/react-native/blob/d3980dceab90b118cc7f69696967aa7f8d4388d9/Libraries/Animated/src/animations/TimingAnimation.js#L78\n  const frameDuration = 1000.0 / 60.0\n  const inputRange: number[] = []\n  const numFrames = Math.round(animationConfig.duration / frameDuration)\n\n  for (let frame = 0; frame < numFrames; frame++) {\n    inputRange.push(easingFunction(frame / numFrames) * 100)\n  }\n\n  const values = []\n  for (let index = amount - 1; index >= 0; index--) {\n    const delayedFrames = Math.round(\n      ((index * time) / animationConfig.duration) * numFrames\n    )\n    const outputRange = inputRange\n      .slice(delayedFrames)\n      .concat(inputRange.slice(0, delayedFrames))\n\n    const value =\n      index === 0\n        ? animationConfig.value\n        : animationConfig.value.interpolate({ inputRange, outputRange })\n    values.push(value)\n  }\n\n  return { animation, values }\n}\n\nexport { loop, stagger, AnimationConfig }\n"]},"metadata":{},"sourceType":"module"}